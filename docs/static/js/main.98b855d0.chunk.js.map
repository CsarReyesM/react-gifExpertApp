{"version":3,"sources":["components/AddCategorie.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAgB7C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,+FAIbC,EAJa,iDAImCC,UAAUH,GAJ7C,0EAMAI,MAAMF,GANN,cAMbG,EANa,gBAQGA,EAAKC,OARR,uBAQZC,EARY,EAQZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAfvB,kBAmBZM,GAnBY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EAEVd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAmBrC,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAEP,CAACpB,IAEGqB,EDfuBM,CAAa3B,GAA/Ba,EAHuB,EAG5BN,KAH4B,EAGhBa,QAWnB,OACI,qCACC,6BAAKpB,IAEF,qBAAKgB,UAAU,uBAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eACIA,GADcA,EAAIC,aEpBjCiB,EAAe,WAAM,MAIM1C,mBAAS,CAAC,cAJhB,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAU9B,OACI,qCACA,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BACS4C,EAAWpB,KAAK,SAAAT,GAAQ,OACzB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YClB1B8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.98b855d0.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategorie = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue,...cats])\n            setInputValue('')\n        }\n       \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n              type='text'\n              value={inputValue}\n              onChange= {handleInputChange}\n            />  \n        </form>\n        \n    )\n}\n\nAddCategorie.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async (category) => {\n\n    const key= `KlH5cZYkXsZAXIcjGvjtsCuarRg7is92`\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${key}`;\n\n    const resp = await fetch(url);\n\n    const {data} = await  resp.json();\n\n    const gifs = data.map( img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n\n        }\n    })\n    return gifs;\n}\n    \n","import React from 'react';\n\nexport const GifGridItem = ({id, title, url}) => {\n    \n    return (\n        <div className='card animate__animated animate__rollIn'>\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n//import {getGifs} from '../helpers/getGifs';\nexport const GifGrid = ({category}) => {\n\n    //const [images, setImages] = useState([]);\n    const {data:images,loading} = useFetchGifs(category);\n\n    \n\n    //useEffect(() => {\n    //    getGifs(category).then(setImages)\n    //}, [category]) // esta sintaxis es para que renderice solo por primera vez \n\n    \n\n\n    return (\n        <>\n         <h3>{category}</h3>\n            \n            <div className='card-grid contenedor'>\n                {\n                    images.map(img => (\n                        <GifGridItem key={img.id}\n                        {...img}/>\n                    ))\n                }\n                \n            </div>\n        </>\n    )\n}                    ","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category)=> {\n\n    const [state, setState ] = useState({\n        data: [],\n        loading: true\n\n    });\n    \n    useEffect(() => {\n        getGifs(category).then(imgs => {\n            setTimeout(() => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            },3000)\n        })\n    }, [category])\n\n    return state; // {data:[], loading: true}\n\n}","import React, {useState} from 'react';\nimport { AddCategorie } from './components/AddCategorie';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    //const categories = ['One pug', 'Samurai', 'Dragon Ball'];\n    \n    const [categories, setCategories] = useState(['One punch']);\n\n    //const handleAdd = () => {\n    //    setCategories([...categories, 'X-Men']);\n    //}\n\n    return (\n        <>\n        <h2>GifExpertApp</h2>\n        <AddCategorie setCategories={setCategories}/>\n        <hr/>\n        \n        <ol>\n                {categories.map( category =>\n                <GifGrid\n                    key ={category}\n                    category= {category}\n                    />\n                )}\n        </ol>\n    \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n \n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}